#!/bin/sh

SRCROOT=`pwd`
export SRCROOT

if [ ! -d tarball ]; then
	mkdir -p tarball
fi
if [ ! -d dist ]; then
	mkdir -p dist
fi
if [ ! -d root ]; then
	doas mkdir -p root/usr
	doas mkdir -p root/lib64
	doas mkdir -p root/bin
	doas ln -s ./ksh root/bin/sh
	doas ln -s ./sbin root/usr/bin
	doas ln -s ../bin root/usr/sbin
	doas ln -s ./bin root/sbin

	doas ln -s ./lib root/usr/lib64
	doas ln -s ../lib root/usr/lib
	doas ln -s ./lib64 root/lib
fi
abort_tarball () {
	echo
	echo " - aborted"
	rm -f tarball/$name
	exit 1
}
abort_extract () {
	echo
	echo " - aborted"
	rm -rf dist/$topdir
	exit 1
}
download () {
	trap abort_tarball 2
	name=`echo "$1" | rev | cut -d"/" -f1 | rev`
	topdir="$2"
	if [ -f tarball/$name ]; then
		echo " - not required to download $1"
	else
		echo " - getting $1"
		wget -O tarball/$name $1
	fi
	trap abort_extract 2
	if [ -d dist/$2 ]; then
		echo " - not required to extract tarball/$name"
	else
		echo " - extracting tarball/$name"
		tar xvf tarball/$name -C dist
	fi
}

OLD=""
NEW=""

enter () {
	OLD=`pwd`
	NEW=$1
	echo " - entering $1"
	cd $1
}

leave () {
	echo " - leaving $NEW"
	cd $OLD
}

set_cc () {
	CC=$SRCROOT/dist/x86_64-linux-musl-cross/bin/x86_64-linux-musl-gcc
	CXX=$SRCROOT/dist/x86_64-linux-musl-cross/bin/x86_64-linux-musl-g++
	AS=$SRCROOT/dist/x86_64-linux-musl-cross/bin/x86_64-linux-musl-as
	LD=$SRCROOT/dist/x86_64-linux-musl-cross/bin/x86_64-linux-musl-ld
	export CC
	export CXX
	export AS
	export LD
	CFLAGS="--sysroot=$SRCROOT/root -O2"
	CXXFLAGS="--sysroot=$SRCROOT/root -O2"
	LDFLAGS="--sysroot=$SRCROOT/root -O2"
	export CFLAGS
	export CXXFLAGS
	export LDFLAGS
}

build () {
	enter $1
	if [ -f .bootstrapped ]; then
		if [ -f ".bootstrapped" ]; then
			echo " - not bootstrapping"
		else
			echo " - bootstrapping"
			./bootstrap.sh || exit 1
			touch .bootstrapped
		fi
	fi
	if [ -f configure ]; then
		if [ -f ".configured" ]; then
			echo " - not configuring"
		else
			echo " - configuring"
			./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/man $4 || exit 1
			touch .configured
		fi
	fi
	if [ -f ".built" ]; then
		echo " - not building"
	else
		echo " - building"
		make -j $(nproc) || exit 1
		touch .built
	fi
	if [ -f ".installed" ]; then
		echo " - not installing"
	else
		echo " - installing"
		doas make install -j $(nproc) $2=$SRCROOT/root $3 || exit 1
		touch .installed
	fi
	leave
}

download http://musl.cc/x86_64-linux-musl-cross.tgz x86_64-linux-musl-cross
download http://git.musl-libc.org/cgit/musl/snapshot/musl-1.2.5.tar.gz musl-1.2.5
download https://invisible-island.net/archives/ncurses/ncurses-6.5.tar.gz ncurses-6.5

set_cc

cp source/sbrk.c dist/musl-1.2.5/src/linux/
build dist/musl-1.2.5 DESTDIR
build musl-fts DESTDIR
LD_LIBRARY_PATH=$SRCROOT/root/usr/lib
export LD_LIBRARY_PATH
build dist/ncurses-6.5 DESTDIR "" "--with-shared --with-termlib --enable-symlinks --disable-widec"
unset LD_LIBRARY_PATH

cp config/heritage.mk heritage/Config.mk
build heritage DESTDIR

build sysvinit ROOT "mandir=/usr/man"

build pdksh DESTDIR "prefix=$SRCROOT/root/usr"
build vi DESTDIR "MANDIR=/usr/man"

echo " - copying files"
for i in `ls -d base/*`; do
	TO=`grep "TO: " $i | sed "s/# TO: //g"`
	doas cp $i $SRCROOT/root/$TO
done
